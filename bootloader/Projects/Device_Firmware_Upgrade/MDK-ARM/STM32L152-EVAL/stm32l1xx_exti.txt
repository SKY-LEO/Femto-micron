; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\stm32l1xx_exti.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\stm32l1xx_exti.d --feedback=.\STM32L152-EVAL\STM32L152-EVAL.fed --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152_EVAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL --omf_browse=.\stm32l152-eval\stm32l1xx_exti.crf ..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;252      */
;;;253    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;254    {
;;;255      /* Check the parameters */
;;;256      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;257      
;;;258      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;259    }
000004  4770              BX       lr
;;;260    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;292      */
;;;293    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;294    {
;;;295      /* Check the parameters */
;;;296      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;297      
;;;298      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;299    }
000004  4770              BX       lr
;;;300    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;106      */
;;;107    void EXTI_DeInit(void)
000000  4907              LDR      r1,|L3.32|
;;;108    {
;;;109      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;110      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;111      EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;112      EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;113      EXTI->PR = 0x00FFFFFF;
000012  4903              LDR      r1,|L3.32|
000014  f06f407f          MVN      r0,#0xff000000
000018  3114              ADDS     r1,r1,#0x14
00001a  6008              STR      r0,[r1,#0]
;;;114    }
00001c  4770              BX       lr
;;;115    
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40010400

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;198      */
;;;199    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;200    {
;;;201      /* Check the parameters */
;;;202      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;203      
;;;204      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;205    }
000008  4770              BX       lr
;;;206    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;229      */
;;;230    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;231    {
000002  4601              MOV      r1,r0
;;;232      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;233      /* Check the parameters */
;;;234      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;235      
;;;236      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;237      {
;;;238        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;239      }
;;;240      else
;;;241      {
;;;242        bitstatus = RESET;
;;;243      }
;;;244      return bitstatus;
;;;245    }
00000e  4770              BX       lr
;;;246    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;267      */
;;;268    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4a06              LDR      r2,|L6.28|
;;;269    {
000002  4601              MOV      r1,r0
;;;270      ITStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;271      uint32_t enablestatus = 0;
;;;272      /* Check the parameters */
;;;273      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;274      
;;;275      enablestatus =  EXTI->IMR & EXTI_Line;
000006  6812              LDR      r2,[r2,#0]
;;;276      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  4b04              LDR      r3,|L6.28|
00000a  400a              ANDS     r2,r2,r1              ;275
00000c  3314              ADDS     r3,r3,#0x14
00000e  681b              LDR      r3,[r3,#0]
000010  420b              TST      r3,r1
000012  d002              BEQ      |L6.26|
000014  2a00              CMP      r2,#0
000016  d000              BEQ      |L6.26|
;;;277      {
;;;278        bitstatus = SET;
000018  2001              MOVS     r0,#1
                  |L6.26|
;;;279      }
;;;280      else
;;;281      {
;;;282        bitstatus = RESET;
;;;283      }
;;;284      return bitstatus;
;;;285    }
00001a  4770              BX       lr
;;;286    
                          ENDP

                  |L6.28|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;127      */
;;;128    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;129    {
;;;130      uint32_t tmp = 0;
;;;131    
;;;132      /* Check the parameters */
;;;133      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;134      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;135      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;136      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;137    
;;;138      tmp = (uint32_t)EXTI_BASE;
000002  491a              LDR      r1,|L7.108|
;;;139         
;;;140      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6802              LDR      r2,[r0,#0]            ;129
000008  b353              CBZ      r3,|L7.96|
;;;141      {
;;;142        /* Clear EXTI line configuration */
;;;143        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  680b              LDR      r3,[r1,#0]
00000c  4393              BICS     r3,r3,r2
00000e  600b              STR      r3,[r1,#0]
;;;144        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000010  1d0a              ADDS     r2,r1,#4
000012  6813              LDR      r3,[r2,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  6013              STR      r3,[r2,#0]
;;;145        
;;;146        tmp += EXTI_InitStruct->EXTI_Mode;
00001a  7902              LDRB     r2,[r0,#4]
00001c  440a              ADD      r2,r2,r1
;;;147    
;;;148        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00001e  6813              LDR      r3,[r2,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  6013              STR      r3,[r2,#0]
;;;149    
;;;150        /* Clear Rising Falling edge configuration */
;;;151        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000026  4a11              LDR      r2,|L7.108|
000028  3208              ADDS     r2,r2,#8
00002a  6813              LDR      r3,[r2,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a3              BICS     r3,r3,r4
000030  6013              STR      r3,[r2,#0]
;;;152        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d13              ADDS     r3,r2,#4
000034  681c              LDR      r4,[r3,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43ac              BICS     r4,r4,r5
00003a  601c              STR      r4,[r3,#0]
;;;153        
;;;154        /* Select the trigger for the selected external interrupts */
;;;155        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  7944              LDRB     r4,[r0,#5]
00003e  2c10              CMP      r4,#0x10
000040  d005              BEQ      |L7.78|
;;;156        {
;;;157          /* Rising Falling edge */
;;;158          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;159          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;160        }
;;;161        else
;;;162        {
;;;163          tmp = (uint32_t)EXTI_BASE;
;;;164          tmp += EXTI_InitStruct->EXTI_Trigger;
000042  4421              ADD      r1,r1,r4
;;;165    
;;;166          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000044  680a              LDR      r2,[r1,#0]
000046  6800              LDR      r0,[r0,#0]
000048  4302              ORRS     r2,r2,r0
00004a  600a              STR      r2,[r1,#0]
;;;167        }
;;;168      }
;;;169      else
;;;170      {
;;;171        tmp += EXTI_InitStruct->EXTI_Mode;
;;;172    
;;;173        /* Disable the selected external lines */
;;;174        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;175      }
;;;176    }
00004c  bd30              POP      {r4,r5,pc}
                  |L7.78|
00004e  6811              LDR      r1,[r2,#0]            ;158
000050  6804              LDR      r4,[r0,#0]            ;158
000052  4321              ORRS     r1,r1,r4              ;158
000054  6011              STR      r1,[r2,#0]            ;158
000056  6819              LDR      r1,[r3,#0]            ;159
000058  6800              LDR      r0,[r0,#0]            ;159
00005a  4301              ORRS     r1,r1,r0              ;159
00005c  6019              STR      r1,[r3,#0]            ;159
00005e  bd30              POP      {r4,r5,pc}
                  |L7.96|
000060  7900              LDRB     r0,[r0,#4]            ;171
000062  4408              ADD      r0,r0,r1              ;171
000064  6801              LDR      r1,[r0,#0]            ;174
000066  4391              BICS     r1,r1,r2              ;174
000068  6001              STR      r1,[r0,#0]            ;174
00006a  bd30              POP      {r4,r5,pc}
;;;177    
                          ENDP

                  |L7.108|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;183      */
;;;184    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;185    {
;;;186      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;187      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;188      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;189      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;190    }
00000c  4770              BX       lr
;;;191    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Libraries\\STM32L1xx_StdPeriph_Driver\\src\\stm32l1xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32l1xx_exti_c_28b3b60e____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32l1xx_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32l1xx_exti_c_28b3b60e____REVSH|
#line 144
|__asm___16_stm32l1xx_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
