; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\my_spi.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\my_spi.d --feedback=.\STM32L152-EVAL\STM32L152-EVAL.fed --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32L152_EVAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL --omf_browse=.\stm32l152-eval\my_spi.crf ..\src\my_spi.c]
                          THUMB

                          AREA ||i.SPI_send||, CODE, READONLY, ALIGN=2

                  SPI_send PROC
;;;44     
;;;45     void SPI_send(unsigned char data)
000000  4601              MOV      r1,r0
;;;46     {
;;;47     	SPI_I2S_SendData(SPI1, data);
000002  4801              LDR      r0,|L1.8|
000004  f7ffbffe          B.W      SPI_I2S_SendData
;;;48     }
                          ENDP

                  |L1.8|
                          DCD      0x40013000

                          AREA ||i.my_spi_init||, CODE, READONLY, ALIGN=2

                  my_spi_init PROC
;;;5      
;;;6      void my_spi_init()
000000  b5f0              PUSH     {r4-r7,lr}
;;;7      {
;;;8      	SPI_InitTypeDef SPI_InitStruct;
;;;9      	GPIO_InitTypeDef InitStruct;
;;;10     	
;;;11     	// Стартуем тактирование SPI
;;;12     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
000002  2101              MOVS     r1,#1
000004  b087              SUB      sp,sp,#0x1c           ;7
000006  0308              LSLS     r0,r1,#12
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;13     
;;;14     	// Настраиваем SPI
;;;15     	SPI_Cmd(SPI1, DISABLE);
00000c  4d22              LDR      r5,|L2.152|
00000e  2100              MOVS     r1,#0
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       SPI_Cmd
;;;16     	
;;;17     	SPI_InitStruct.SPI_Direction = SPI_Direction_1Line_Tx;
000016  f44f4040          MOV      r0,#0xc000
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;18     	SPI_InitStruct.SPI_Mode = SPI_Mode_Master;
;;;19     	SPI_InitStruct.SPI_DataSize = SPI_DataSize_8b;
00001e  2400              MOVS     r4,#0
000020  f44f7082          MOV      r0,#0x104             ;18
000024  f8ad0002          STRH     r0,[sp,#2]            ;18
;;;20     	SPI_InitStruct.SPI_CPOL = SPI_CPOL_Low;
;;;21     	SPI_InitStruct.SPI_CPHA = SPI_CPHA_1Edge;
000028  f8ad4008          STRH     r4,[sp,#8]
;;;22     	SPI_InitStruct.SPI_NSS = SPI_NSS_Soft;
00002c  1568              ASRS     r0,r5,#21
00002e  f8ad000a          STRH     r0,[sp,#0xa]
;;;23     	SPI_InitStruct.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_8;
000032  2010              MOVS     r0,#0x10
000034  f8ad000c          STRH     r0,[sp,#0xc]
;;;24     	SPI_InitStruct.SPI_FirstBit = SPI_FirstBit_MSB;
;;;25     	SPI_InitStruct.SPI_CRCPolynomial = 0x7;
000038  2007              MOVS     r0,#7
00003a  f8ad4004          STRH     r4,[sp,#4]            ;19
00003e  f8ad0010          STRH     r0,[sp,#0x10]
000042  f8ad4006          STRH     r4,[sp,#6]            ;20
000046  f8ad400e          STRH     r4,[sp,#0xe]          ;24
;;;26     	SPI_Init(SPI1, &SPI_InitStruct);
00004a  4669              MOV      r1,sp
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       SPI_Init
;;;27     	SPI_Cmd(SPI1, ENABLE);
000052  2101              MOVS     r1,#1
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       SPI_Cmd
;;;28     
;;;29     	// Настраиваем ноги GPIO для сигналов SCK и MOSI
;;;30     	InitStruct.GPIO_Mode = GPIO_Mode_AF;
00005a  2502              MOVS     r5,#2
00005c  f88d5018          STRB     r5,[sp,#0x18]
;;;31     	InitStruct.GPIO_OType = GPIO_OType_PP;
000060  f88d401a          STRB     r4,[sp,#0x1a]
;;;32     	InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;33     	InitStruct.GPIO_Speed = GPIO_Speed_40MHz;
;;;34     	InitStruct.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_7;
000064  20a0              MOVS     r0,#0xa0
;;;35     	GPIO_Init(GPIOA, &InitStruct);
000066  4f0d              LDR      r7,|L2.156|
000068  f88d401b          STRB     r4,[sp,#0x1b]         ;32
00006c  2603              MOVS     r6,#3                 ;33
00006e  9005              STR      r0,[sp,#0x14]
000070  f88d6019          STRB     r6,[sp,#0x19]         ;33
000074  a905              ADD      r1,sp,#0x14
000076  4638              MOV      r0,r7
000078  f7fffffe          BL       GPIO_Init
;;;36     
;;;37     	// Настраиваем ножку GPIO для сигнала MISO
;;;38     	InitStruct.GPIO_Mode = GPIO_Mode_IN;
00007c  f88d4018          STRB     r4,[sp,#0x18]
;;;39     	InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
;;;40     	InitStruct.GPIO_Speed = GPIO_Speed_40MHz;
;;;41     	InitStruct.GPIO_Pin = GPIO_Pin_6;
000080  2040              MOVS     r0,#0x40
000082  f88d501b          STRB     r5,[sp,#0x1b]         ;39
;;;42     	GPIO_Init(GPIOA, &InitStruct);
000086  9005              STR      r0,[sp,#0x14]
000088  f88d6019          STRB     r6,[sp,#0x19]         ;40
00008c  a905              ADD      r1,sp,#0x14
00008e  4638              MOV      r0,r7
000090  f7fffffe          BL       GPIO_Init
;;;43     }
000094  b007              ADD      sp,sp,#0x1c
000096  bdf0              POP      {r4-r7,pc}
;;;44     
                          ENDP

                  |L2.152|
                          DCD      0x40013000
                  |L2.156|
                          DCD      0x40020000

;*** Start embedded assembler ***

#line 1 "..\\src\\my_spi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_my_spi_c_eb4f319e____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_my_spi_c_eb4f319e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_my_spi_c_eb4f319e____REVSH|
#line 144
|__asm___8_my_spi_c_eb4f319e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
